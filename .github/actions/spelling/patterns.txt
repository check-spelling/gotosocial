# See https://github.com/check-spelling/check-spelling/wiki/Configuration-Examples:-patterns

BEGIN ((?:RSA |)(?:PUBLIC|PRIVATE)) KEY.*END \g{-1} KEY

# Automatically suggested patterns
# hit-count: 2287 file-count: 238
# https/http/file urls
(?:\b(?:https?|ftp|file)://)[-A-Za-z0-9+&@#/%?=~_|!:,.;]+[-A-Za-z0-9+&@#/%=~_|]

# hit-count: 227 file-count: 2
# font awesome classes
\.fa-[-a-z0-9]+

# hit-count: 67 file-count: 18
# uuid:
\b[0-9a-fA-F]{8}-(?:[0-9a-fA-F]{4}-){3}[0-9a-fA-F]{12}\b

# hit-count: 57 file-count: 17
# hex runs
\b[0-9a-fA-F]{16,}\b

# hit-count: 31 file-count: 30
# IServiceProvider
\bI(?=(?:[A-Z][a-z]{2,})+\b)

# hit-count: 27 file-count: 5
# URL escaped characters
\%[0-9A-F][A-F]

# hit-count: 19 file-count: 3
# Non-English
[a-zA-Z]*[ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŠšŜŝŸŽžź][a-zA-Z]{3}[a-zA-ZÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŠšŜŝŸŽžź]*|[a-zA-Z]{3,}[ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŠšŜŝŸŽžź]|[ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖØÙÚÛÜÝßàáâãäåæçèéêëìíîïðñòóôõöøùúûüýÿĀāŁłŃńŅņŒœŚśŠšŜŝŸŽžź][a-zA-Z]{3,}

# Update Lorem based on your content (requires `ge` and `w` from https://github.com/jsoref/spelling; and `review` from https://github.com/check-spelling/check-spelling/wiki/Looking-for-items-locally )
# grep '^[^#].*lorem' .github/actions/spelling/patterns.txt|perl -pne 's/.*i..\?://;s/\).*//' |tr '|' "\n"|sort -f |xargs -n1 ge|perl -pne 's/^[^:]*://'|sort -u|w|sed -e 's/ .*//'|w|review -
# Warning, while `(?i)` is very neat and fancy, if you have some binary files that aren't proper unicode, you might run into:
## Operation "substitution (s///)" returns its argument for non-Unicode code point 0x1C19AE (the code point will vary).
## You could manually change `(?i)X...` to use `[Xx]...`
## or you could add the files to your `excludes` file (a version after 0.0.19 should identify the file path)
# Lorem
(?:\w|\s|[,.])*\b(?i)(?:amet|consectetur|cursus|dolor|eros|ipsum|lacus|libero|ligula|lorem|magna|neque|nulla|suscipit|tempus)\b(?:\w|\s|[,.])*

# hit-count: 13 file-count: 4
# crypt
(['"])\$2[ayb]\$.{56}\g{-1}

# hit-count: 11 file-count: 5
# hex digits including css/html color classes:
(?:[\\0][xX]|[uU]\+|#x?|\%23)[0-9_a-fA-FgGrR]*?[a-fA-FgGrR]{2,}[0-9_a-fA-FgGrR]*(?:[uUlL]{0,3}|u\d+)\b
\\u[0-9a-f]{4}

# hit-count: 10 file-count: 2
# css url wrappings
\burl\([^)]*\)

# hit-count: 6 file-count: 2
# Punycode
\bxn--[-0-9a-z]+

# hit-count: 3 file-count: 2
# Contributor
\[[^\]]+\]\(https://github\.com/[^/\s"]+\)

# hit-count: 1 file-count: 1
# sha-... -- uses a fancy capture
(\\?['"]|&quot;)[0-9a-f]{40,}\g{-1}

# hit-count: 1 file-count: 1
# assign regex
= /[^*].*/

# hit-count: 1 file-count: 1
# Go regular expressions
regexp?\.MustCompile\(`[^`]*`\)

# hit-count: 1 file-count: 1
# set arguments
\bset(?:\s+-[abefimouxE]{1,2})*\s+-[abefimouxE]{3,}(?:\s+-[abefimouxE]+)*

# hit-count: 70 file-count: 19
# version suffix <word>v#
(?:(?<=[A-Z]{2})V|(?<=[a-z]{2}|[A-Z]{2})v)\d+(?:\b|(?=[a-zA-Z_]))

# hit-count: 1 file-count: 1
# tar arguments
\b(?:\\n|)g?tar(?:\.exe|)(?:(?:\s+--[-a-zA-Z]+|\s+-[a-zA-Z]+|\s[ABGJMOPRSUWZacdfh-pr-xz]+\b)(?:=[^ ]*|))+

# in a version of check-spelling after @0.0.21 printf markers won't be automatically consumed
# printf markers
(?<!\\)\\[n](?=[a-z]{2,})
(?<!\\)\\[t](?=[a-z]{2,})(?!emp|est|ime|ype)

([`"]).*class=\\?"invisible\\?".*\g{-1}

"?[Bb]lurhash"?:\s*"[^"]+"
dBlurhash\.Set\("[^"]+"
Blurhash := "[^"]+"
ID:\s*"[0-9A-Z]+"
"id": "[0-9A-Z]+"
suite\.Equal\("[^"]+"
DeleteBlockByID\(ctx, "\w+"
emojiID := "[0-9A-Z]+"
pandaPath := "[\w/.]+"
strongPassword := "[^"]+"
^[/\s]+example: \S+$
Examples: \[.+\]
"[0-9A-Z]{13}"
\b[0-9A-Z]{26}\b
\b[0-9A-Z]{52}\b
Sec-WebSocket-(?:Accept|Key): \w+

# Questionably acceptable forms of `in to`
# Personally, I prefer `log into`, but people object
# https://www.tprteaching.com/log-into-log-in-to-login/
\b[Ll]og in to\b

# acceptable duplicates
# ls directory listings
[-bcdlpsw](?:[-r][-w][-Ssx]){3}\s+\d+\s+\S+\s+\S+\s+\d+\s+
# mount
\bmount\s+-t\s+(\w+)\s+\g{-1}\b
# C types and repeated CSS values
\s(auto|center|div|inherit|long|LONG|none|normal|Original|solid|thin|transparent|very|Visibility)(?: \g{-1})+\s
# C struct
\bstruct\s+(\w+)\s+\g{-1}\b
# go templates
\s(\w+)\s+\g{-1}\s+\`(?:graphql|json|yaml):
# javadoc / .net
(?:[\\@](?:groupname|param)|(?:public|private)(?:\s+static|\s+readonly)*)\s+(\w+)\s+\g{-1}\s

# Commit message -- Signed-off-by and friends
^\s*(?:(?:Based-on-patch|Co-authored|Helped|Mentored|Reported|Reviewed|Signed-off)-by|Thanks-to): (?:[^<]*<[^>]*>|[^<]*)\s*$

# Autogenerated revert commit message
^This reverts commit [0-9a-f]{40}\.$

# ignore long runs of a single character:
\b([A-Za-z])\g{-1}{3,}\b
